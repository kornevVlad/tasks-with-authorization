CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_name VARCHAR(50),              --Имя
    email VARCHAR(100) NOT NULL UNIQUE, --Почта
    user_password VARCHAR(50),          --Пароль
    role VARCHAR(50),                   --Роль(User,Admin)
    CONSTRAINT PR_USER PRIMARY KEY (user_id)
    );

CREATE TABLE IF NOT EXISTS tasks (
    task_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    task_header VARCHAR(100) NOT NULL, --Заголовок
    description VARCHAR(300) NOT NULL, --Описание
    author_id BIGINT NOT NULL,         --Автор
    executor_id BIGINT,                --Исполнитель
    status_task VARCHAR(50),           --Статус
    priority_status VARCHAR(50),       --Приоритет
    create_date_time TIMESTAMP,        --Время создания
    update_date_time TIMESTAMP,        --Время обновления
    CONSTRAINT PR_TASK PRIMARY KEY (task_id),
    CONSTRAINT FK_TASK_FOR_AUTHOR FOREIGN KEY (author_id) REFERENCES users (user_id),
    CONSTRAINT FK_TASK_FOR_EXECUTOR FOREIGN KEY (executor_id) REFERENCES users (user_id)
    );

CREATE TABLE IF NOT EXISTS comments (
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(300) NOT NULL, --Описание
    user_id BIGINT NOT NULL,           --Пользователь
    task_id BIGINT NOT NULL ,          --Задача
    create_data_time_comment TIMESTAMP,--Время создания
    CONSTRAINT PR_COMMENT PRIMARY KEY (comment_id),
    CONSTRAINT FK_COMMENT_FOR_USER FOREIGN KEY (user_id) REFERENCES users (user_id),
    CONSTRAINT FK_COMMENT_FOR_TASK FOREIGN KEY (task_id) REFERENCES tasks (task_id) ON DELETE CASCADE
);

    INSERT INTO users (user_name, email, user_password, role)
    VALUES ('vlad', 'vlad@yandex.ru', '12345', 'ADMIN');